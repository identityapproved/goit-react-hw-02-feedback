{"version":3,"sources":["Components/Feedback/Feedback.styled.js","Components/Feedback/Feedback.js","Components/Notification/Notification.styled.js","Components/Notification/Notification.js","Components/Section/Section.styled.js","Components/Section/Section.js","Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.js","Components/App/App.js","constants/theme.js","index.js"],"names":["FeedbackBtn","styled","button","props","theme","colors","black","FeedbackOptions","options","leaveFeedback","map","opt","type","name","onClick","toUpperCase","NotificationStyles","p","secondaryText","Notification","message","SectionMain","section","SectionTitle","h2","Section","title","children","StatsList","ul","StatsListItem","li","Statistic","good","neutral","bad","total","positivePercentage","App","state","onLeaveFeedback","option","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","freeze","white","green","red","blue","primaryText","spacing","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEaA,EAAcC,IAAOC,OAAV,6OAMb,SAAAC,GAAK,gBAAOA,EAAMC,MAAMC,OAAOC,U,OCL7BC,EAAkB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACzC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAG,OACd,cAACX,EAAD,CAAuBY,KAAK,SAASC,KAAMF,EAAKG,QAAS,kBAAML,EAAcE,IAA7E,SACGA,EAAII,eADWJ,SCLbK,EAAqBf,IAAOgB,EAAV,kEACpB,SAAAd,GAAK,OAAIA,EAAMC,MAAMC,OAAOa,iBCA1BC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,cAACJ,EAAD,UAAqBI,KCFjBC,EAAcpB,IAAOqB,QAAV,kIAKZ,SAAAnB,GAAK,0BAAiBA,EAAMC,MAAMC,OAAOa,kBAGxCK,EAAetB,IAAOuB,GAAV,sDCPZC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,eAACN,EAAD,WACGK,GAAS,cAACH,EAAD,UAAeG,IACxBC,MCLMC,EAAY3B,IAAO4B,GAAV,yDAKTC,EAAgB7B,IAAO8B,GAAV,yHCJbC,EAAY,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACrD,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAAsBG,KACtB,eAACH,EAAD,uBAAyBI,KACzB,eAACJ,EAAD,mBAAqBK,KACrB,eAACL,EAAD,qBAAuBM,KACvB,eAACN,EAAD,iCAAmCO,EAAnC,W,gBCJeC,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,gBAAkB,SAAAC,GAChB,EAAKC,SAAL,eAAiBD,EAAS,EAAKF,MAAME,GAAU,K,EAGjDE,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBS,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKP,MAAMN,KAAO,EAAKU,qBAAwB,M,4CAGpE,WACE,MAA+BI,KAAKR,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAAST,MAAM,0BAAf,SACE,cAAC,EAAD,CAAiBlB,QAASwC,OAAOC,KAAKF,KAAKR,OAAQ9B,cAAesC,KAAKP,oBAExEO,KAAKJ,qBACJ,cAAC,EAAD,CAASjB,MAAM,aAAf,SACE,cAAC,EAAD,CACEO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,KAAKJ,qBACZN,mBAAoBU,KAAKH,sCAI7B,cAAC,EAAD,CAAcxB,QAAQ,gC,GAvCC8B,aCNpB9C,EAAQ4C,OAAOG,OAAO,CACjC9C,OAAQ,CACN+C,MAAO,UACP9C,MAAO,UACP+C,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,YAAa,UACbtC,cAAe,WAEjBuC,QAAS,SAAAC,GAAK,gBAAO,EAAIA,EAAX,S,uBCHhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAezD,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJ0D,SAASC,eAAe,W","file":"static/js/main.2cef3c7a.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const FeedbackBtn = styled.button`\n  /* width: 200px; */\n  margin: 10px;\n  border: 1px solid grey;\n  border-radius: 23px;\n  padding: 12px 24px;\n  color: ${props => `${props.theme.colors.black}`};\n  transition: all 250ms ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { FeedbackBtn } from './Feedback.styled';\nimport PropTypes from 'prop-types';\n\nexport const FeedbackOptions = ({ options, leaveFeedback }) => {\n  return (\n    <>\n      {options.map(opt => (\n        <FeedbackBtn key={opt} type=\"button\" name={opt} onClick={() => leaveFeedback(opt)}>\n          {opt.toUpperCase()}\n        </FeedbackBtn>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  leaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const NotificationStyles = styled.p`\n  color: ${props => props.theme.colors.secondaryText};\n  text-align: center;\n`;\n","import { NotificationStyles } from './Notification.styled';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return <NotificationStyles>{message}</NotificationStyles>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SectionMain = styled.section`\n  margin: 0 auto;\n  align-items: center;\n  text-align: center;\n  padding: 10vh 0;\n  border: ${props => `1px solid ${props.theme.colors.secondaryText}`};\n`;\n\nexport const SectionTitle = styled.h2`\n  align-items: 'center';\n`;\n","import { SectionMain, SectionTitle } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionMain>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      {children}\n    </SectionMain>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StatsList = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const StatsListItem = styled.li`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { StatsList, StatsListItem } from './Statistics.styled';\n\nexport const Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <StatsList>\n      <StatsListItem>Good: {good}</StatsListItem>\n      <StatsListItem>Neutral: {neutral}</StatsListItem>\n      <StatsListItem>Bad: {bad}</StatsListItem>\n      <StatsListItem>Total: {total}</StatsListItem>\n      <StatsListItem>Positive feedback: {positivePercentage}%</StatsListItem>\n    </StatsList>\n  );\n};\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { FeedbackOptions } from 'Components/Feedback/Feedback';\nimport { Notification } from 'Components/Notification/Notification';\nimport { Section } from 'Components/Section/Section';\nimport { Statistic } from 'Components/Statistics/Statistics';\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please, leave feedback.\">\n          <FeedbackOptions options={Object.keys(this.state)} leaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        {this.countTotalFeedback() ? (\n          <Section title=\"Statistic:\">\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given...\" />\n        )}\n      </>\n    );\n  }\n}\n","export const theme = Object.freeze({\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n    green: '#4caf50',\n    red: '#f44336',\n    blue: '#2196f3',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n  },\n  spacing: value => `${4 * value}px`,\n});\n","import { ThemeProvider } from '@emotion/react';\nimport App from 'Components/App/App';\nimport { theme } from 'constants/theme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}